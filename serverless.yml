service: sls-canary-example

provider:
  name: aws
  runtime: nodejs12.x
  stahe: ${opt:stage, 'dev'}
  region: ${opt:region, 'us-east-2'}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - codedeploy:*
      Resource:
        - "*"

plugins:
  - serverless-plugin-aws-alerts
  - serverless-plugin-canary-deployments

custom:
  alerts:
    dashboards: true
  deploymentSettings:
    stages: # list of stages where you want to deploy your functions gradually
      - prod

functions:
#  hello:
#    handler: handler.hello
#    events:
#      - http: get hello
#    alarms:
#      - name: foo
#        namespace: 'AWS/Lambda'
#        metric: Errors
#        threshold: 1
#        statistic: Minimum
#        period: 60
#        evaluationPeriods: 1
#        comparisonOperator: GreaterThanOrEqualToThreshold
#    deploymentSettings:
#      type: Linear10PercentEvery1Minute
#      alias: Live
#      preTrafficHook: preHook
#      postTrafficHook: postHook
#      alarms:
#        - HelloFooAlarm

  helloSns:
    handler: handlerSns.hello
    events:
      - sns: newSnsTopic
    alarms:
      - name: foo
        namespace: 'AWS/Lambda'
        metric: Errors
        threshold: 1
        statistic: Minimum
        period: 60
        evaluationPeriods: 1
        comparisonOperator: GreaterThanOrEqualToThreshold
    deploymentSettings:
      type: Linear10PercentEvery1Minute
      alias: Live
      preTrafficHook: preHook
      postTrafficHook: postHook
      alarms:
        - HelloSnsFooAlarm
  preHook:
    handler: hooks.pre
  postHook:
    handler: hooks.post
